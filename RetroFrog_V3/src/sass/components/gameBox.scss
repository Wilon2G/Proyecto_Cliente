@use '../abstracts/variables.scss' as *;
.games {
  display: flex;
  flex-wrap: wrap;
  align-content: center;
  justify-content: space-evenly;

  width: 100%;

  @media only screen and (max-width: 450px) {
    flex-direction: column;
    justify-content: center;
  }
}
.game {
  z-index: 1;
  transition: z-index 0s linear 0.4s;
  margin: 1rem;
}
.game:hover {
  z-index: 10000;
  transition-delay: 0s;
  transition: z-index 0s linear 0.4s;
}
.scene {
  perspective: 70rem;
  width: fit-content;
  height: 28rem; // Contenedor grande en el que se coloca todo, este es el contenedor que rota
  padding-top: 2rem;
  position: relative;

  z-index: 9;
  margin: 1rem 1rem;

  @media only screen and (max-width: 450px) {
    scale: 50%;
    margin: 0;
    padding-top: 0;
    height: 15rem;
  }

  // Cuando el contenedor recibe el hover, la caja rota
  &:hover .box {
    transform: rotateY(-180deg); // Rotación del contenedor
    scale: 130%;
  }

  .box {
    width: 18rem;
    height: 18rem;
    transform-style: preserve-3d;
    transition: all 1s ease-out;
    margin: 1rem;
    position: relative;

    .shadow {
      background: radial-gradient(
        ellipse at 50% 50%,
        #000000 0%,
        #ffffff00 69%
      );
      transform: rotateX(-90deg);

      width: 19.4rem; // De momento no se me ocurre qué hacer
      height: 18.4rem;

      position: absolute;
      top: 10rem;
      left: 0.1rem;
      // z-index: 1;
      // background-color: #9dcc78;
    }
    // background: radial-gradient(ellipse at 50% 50%, #000000 0%, #FFFFFF00 69%); OPCION A
    // background: radial-gradient(ellipse at 50% 50%, #000000E0 0%, #FFFFFF00 69%);  OPCION B
    // box-shadow: 0px 31px 19px -12px rgba(0,0,0,0.49); Obsoleto!!!!!!!!!!!!!!!!!!!!!!!!!!

    .box__face {
      position: absolute;
      width: 100%;
      height: 100%;
      backface-visibility: hidden;

      &--front {
        background: $ppal-white;
        border: 2px solid $ppal-black;
        overflow: hidden;
        background-size: cover;
        transform: rotateY(0deg) translateZ(1.5rem);
      }

      &--right {
        background: $right-side; // Para escribir en vertical en el lado queremos usar la etiqueta writing-mode y text-orientation :)
        width: 3rem;
        transform: rotateY(90deg) translateZ(16.5rem);

        overflow: hidden;

        writing-mode: vertical-rl;
        font-weight: 1000;

        display: flex;
        justify-content: center;
        flex-flow: column;
        align-items: center;

        div {
          letter-spacing: 0.4rem;
          text-align: center;
          background: linear-gradient(
            180deg,
            $rigth-etiqueta-init 14%,
            $rigth-etiqueta-final 65%
          );
          border-radius: 0.4rem;
          padding: 0.1rem;
          color: $rigth-etiqueta-text;
          border: $ppal-black solid 0.1rem;
        }
      }

      &--back {
        background: $ppal-black;

        overflow: hidden;
        transform: rotateY(180deg) translateZ(1.5rem);

        display: flex;
        align-items: center;
        flex-flow: column;
        justify-content: space-between;

        .background {
          width: 100%;
          height: 100%;
          position: absolute;
          background-size: cover;
        }

        h3 {
          margin: 10px;
          padding: 0.5rem;

          font-size: $ppal-font-size;
          color: $ppal-white;

          background-color: $back-title-bg;
          border-radius: 0.2rem;

          z-index: 1;
        }

        p {
          margin: 10px;
          padding: 0.5rem;

          font-size: $x-small-font-size;
          color: $ppal-white;

          background-color: $back-text-bg;
          border-radius: 0.2rem;

          z-index: 1;
        }

        button {
          padding: 0px;
          position: relative;

          width: 150px;
          height: 60px;

          background: linear-gradient(
            to left top,
            $back-button-init 50%,
            $back-button-final 50%
          );

          border-style: none;

          color: $ppal-white;
          font-size: $ppal-font-size;
          letter-spacing: 3px;
          font-weight: 600;

          outline: none;
          cursor: pointer;

          overflow: hidden;
          transition: all 0.5s ease, background 0.5s ease;
          box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.2);
          border-radius: 0.2rem;

          &:hover {
            transition: all 0.5s;
            transform: scale(1.1);
            background: linear-gradient(
              to left top,
              $back-button-hover-init 50%,
              $back-button-hover-final 50%
            );
            box-shadow: 0px 3px 5px rgba(0, 0, 0, 0.4);
          }

          span {
            position: absolute;
            display: block;

            //Movimiento de las lineas boton trasero
            &:nth-child(1) {
              height: 3px;
              width: 200px;

              top: 0px;
              left: -200px;

              background: linear-gradient(
                to right,
                rgba(0, 0, 0, 0),
                $back-button-line-move
              );
              border-top-right-radius: 1px;
              border-bottom-right-radius: 1px;
              animation: span1 2s linear infinite;
              animation-delay: 1s;
            }

            &:nth-child(2) {
              height: 70px;
              width: 3px;

              top: -70px;
              right: 0px;

              background: linear-gradient(
                to bottom,
                rgba(0, 0, 0, 0),
                $back-button-line-move
              );
              border-bottom-left-radius: 1px;
              border-bottom-right-radius: 1px;
              animation: span2 2s linear infinite;
              animation-delay: 2s;
            }

            &:nth-child(3) {
              height: 3px;
              width: 200px;

              right: -200px;
              bottom: 0px;

              background: linear-gradient(
                to left,
                rgba(0, 0, 0, 0),
                $back-button-line-move
              );
              border-top-left-radius: 1px;
              border-bottom-left-radius: 1px;
              animation: span3 2s linear infinite;
              animation-delay: 3s;
            }

            &:nth-child(4) {
              height: 70px;
              width: 3px;

              bottom: -70px;
              left: 0px;

              background: linear-gradient(
                to top,
                rgba(0, 0, 0, 0),
                $back-button-line-move
              );
              border-top-right-radius: 1px;
              border-top-left-radius: 1px;
              animation: span4 2s linear infinite;
              animation-delay: 4s;
            }
          }
          &:disabled{
            background: linear-gradient(to left top, #c5c5c5 50%, #6b6b6b 50%);
          }
        }
        
      }
    }
  }

  @keyframes span1 {
    0% {
      left: -200px;
    }
    100% {
      left: 200px;
    }
  }

  @keyframes span2 {
    0% {
      top: -70px;
    }
    100% {
      top: 70px;
    }
  }

  @keyframes span3 {
    0% {
      right: -200px;
    }
    100% {
      right: 200px;
    }
  }

  @keyframes span4 {
    0% {
      bottom: -70px;
    }
    100% {
      bottom: 70px;
    }
  }
}
